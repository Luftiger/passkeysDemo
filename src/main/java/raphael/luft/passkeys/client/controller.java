package raphael.luft.passkeys.client;import javafx.fxml.FXML;import javafx.scene.control.Button;import javafx.scene.web.WebView;import javafx.scene.control.TextField;import raphael.luft.passkeys.client.helpers.Connection;import raphael.luft.passkeys.client.helpers.RegistrationResponse;public class controller {    private StringBuilder sb;    private Connection connection;    private String username;    @FXML    private TextField usernameField;    @FXML    private Button registrationBtn;    @FXML    private Button signInBtn;    @FXML    private WebView outputArea;    @FXML    public void initialize() {        this.sb = new StringBuilder();        this.sb.append(                """                        <style>                        *{                        font-size: 14px;                        font-family: Arial, Helvetica, sans-serif;                        }                        .warning{                        color: red;                        }                        .important{                        font-weight: bold;                        }                        </style>"""        );    }    @FXML    protected void RegistrationHandler() {        if (usernameIsValid()) {            addOutput("<p class='important'>Registrierung läuft...</p>");            this.connection.send("[RA]");            String msg = this.connection.receive();            if (!(msg.equals("!"))) {                RegistrationResponse registrationResponse = new RegistrationResponse(msg, username);            } else {                // TODO: error handling            }        } else addOutput("<p class='warning'>Der von Ihnen gewählte Username muss folgende Regeln erfüllen: </p>");        //TODO: Message zuende    }    private boolean usernameIsValid(){        this.username = this.usernameField.getText();        //TODO: weitere Bedingungen        return username.length() >= 8 && !(username.contains(" "));    }    @FXML    protected void ConnectionHandler() {        this.connection = new Connection("localhost", 5000);        boolean c = this.connection.connect();        if (c){            addOutput("<p class='important'>Verbindung hergestellt</p>");            this.usernameField.setDisable(false);            this.registrationBtn.setDisable(false);            this.signInBtn.setDisable(false);        } else addOutput("<p class='warning'>Fehler beim Verbindungsaufbau, bitte versuchen Sie es erneut.</p>");    }    private void addOutput(String s) {        this.sb.append(s);        this.outputArea.getEngine().loadContent(this.sb.toString());    }}